Here, you find a manual how to get started with the new function wiener_full_lpdf. 

!!IMPORTANT!! This manual only works for LINUX-systems (or subsystems like Windows Subsystem for Linux (WSL) or  Virtual Machines). 
Only when the function is fully integrated into Stan, other operating systems can use the function.

In case of any question feel free to contact the authors Franziska Henrich (franziska.henrich@psychologie.uni-freiburg.de) or Valentin Pratz (pratz@stud.uni-heidelberg.de)

The easiest way to use the function is via cmdstan. You can call cmdstan via cmdstanr in R.

You need to follow these steps: 

1) Clone the cmdstan-repository [1]:
	$ git clone https://github.com/stan-dev/cmdstan.git --recursive

2) Go to the stan-math (stan/lib/stan_math) subdirectory, add a new remote repo (name it as you want, here: new_repo), fetch the branch, and switch to that branch:
	$ cd cmdstan/stan/lib/stan_math
	$ git remote add new_repo git@github.com:Franzi2114/math.git
	$ git fetch new_repo feature/issue-2682-Add-7-parameter-DDM-PDF
	$ git checkout feature/issue-2682-Add-7-parameter-DDM-PDF

3a) To be able to use the function, load the current Stan-compiler (stanc3). Follow the instructions in [2]. 
3b) Then add in stanc3/src/middle/Stan_math_signatures.ml the signature for the new function below the wiener-signature near line 305:
	; ([Lpdf], "wiener_full", [DReal; DReal; DReal; DReal; DReal; DReal; DReal; DReal], SoA)
  	; ([Lpdf], "wiener_full_prec", [DReal; DReal; DReal; DReal; DReal; DReal; DReal; DReal; DReal], SoA)

4) To test whether everything works, create a .stan model file in cmdstan/stan/lib/stan_math/models (or use the example models provided in the folder) 
   and compile the model (!!without .stan-extension!!, see [4]):
	$ cd cmdstan
	$ make stan/lib/stan_math/models/wiener_full_lpdf STANC3=path/to/stanc3-folder

5a) To open the documentation install doxygen [3]. Then make the documentation:
	$ cd cmdstan/stan/lib/stan_math
	$ make doxygen
5b) A new folder in stan_math will be created. Double click on: doc/api/html/index.html. 
    Then a webpage opens. On the left handside, navigate to "Internal Docs". Click on "Probability Distributions". 
    Then, on the right hand side, the content of "Probability Distributions" opens. Scroll down to "wiener_full_lpdf".



Example R-Code for cmdstanr. 
data.rds of the form: condition|resonse|reaction_time
	install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
	library(cmdstanr)
	library(readr)
	set_cmdstan_path("path/to/cmdstan-folder")
	file <- file.path("stan/wiener_full_lpdf.stan")
	mod <- cmdstan_model(file)
	init.full = function(chains=4, N=200){
	  L = list()
	  for (i in 1:chains) {
	    L[[i]] = list(
	      a = 1,
	      zr_m = 0.5,
	      v_m = c(0,0),
	      t0_m = 0.1,
	      zr_s = 0.1,
	      v_s = 0.2,
	      t0_s = 0.1
	    )
	  }
	  return (L)
	}

	sim.data = readRDS("path/to/data.rds")
	stan.data = list(
	  N = nrow(sim.data),     # Number of Trials
	  cnd = sim.data$cnd,     # stimulus type (1,2)
	  Ncnds = length(unique(sim.data$cnd)), # Number of conditions
	  rt = sim.data$rt,       # Rt in seconds!
	  resp = sim.data$resp,    # response (0=lower threshold, 1=upper threshold)
	  precision = 1e-3,
	  parallel = 0
	)
	fit <- mod$sample(
	  data = stan.data,
	  seed = 123,
	  chains = 4,
	  parallel_chains = 4,
	  refresh = 10,
	  iter_warmup = 200,
	  iter_sampling = 300,
	  init = init.full()
	)

[1] https://github.com/stan-dev/cmdstan
[2] https://mc-stan.org/stanc3/stanc/getting_started.html
[3] https://doxygen.nl/manual/install.html
[4] https://github.com/stan-dev/cmdstan/wiki/Getting-Started-with-CmdStan


